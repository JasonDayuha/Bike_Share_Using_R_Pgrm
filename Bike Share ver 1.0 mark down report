
---
title: "Bike-Share Navigate Speedy Success?"
author: "Jason D."
date: "2023-01-15"
output: 
  html_document:
    toc: true
    theme: united
  
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# 1. Introduction

This is a capstone project from Google’s Data Analyst curriculum program.  A bike share program in Chicago would like to increase its future success which depends on maximizing the number of annual memberships in its program. The company has provided data to be analyzed to  aid with the marketing team in finding strategies to convert casual riders to annual members.

# 2. Ask Guided Questions

2.1 Characters and teams:

* Cyclistic: A bike-share program that features more than 5,800 bicycles and 600 docking stations.

* Lily Moreno: The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.

* Cyclistic marketing analytics team: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. 

* Cyclistic executive team: The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.

2.2 Business task:

* Lily Mareno the director of marketing has assigned the question, how do annual members and casual riders use Cyclistic bikes diﬀerently?


2.3 Data:

* The data to be analyzed has been sourced from: Index of bucket "divvy-tripdata": [ Data set](https://divvy-tripdata.s3.amazonaws.com/index.html). The data is available by Motivate International Inc. under this [license](https://ride.divvybikes.com/data-license-agreement). This is public data for the purpose of exploring how diﬀerent customer types are using Cyclistic bikes. Regarding data-privacy issues the historical purchases using personal payment information and fare not provided.

# 3. Preparing Data for Exploration
Once data has been downloaded into a local computer, it is secured with an encrypted password. The last 12 months of data will be analyzed for the purpose of this project. Data comes in 12 cvs files for corresponding to the last 12 months. All 12 files take a lot of memory to handel so R programming will be use to complete this project. Regarding the quality of this data, it is considered data that has been generated by Lyft Bikes and Scooters, LLC (“Bikeshare”) that operates in the City of Chicago’s (“City”) Divvy bicycle sharing service.

# 4. Process Data from Dirty to Clean

Library s used to work with this data:
```{r eval=FALSE, include=TRUE}
library("tidyverse")
library("janitor")
library("skimr")
library("lubridate")
library("ggpubr")
library("data.table")
library("viridis")
library("leaflet")
library("htmlwidgets")
library("htmltools")
```


We start working with the data by first combining the last 12 months of data into one file. Then check the data for a quick overview of whats in the data frame.
```{r eval=FALSE, include=TRUE}
```{undefined eval=FALSE, include=TRUE}
df1  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202101-divvy-tripdata.csv")
df2  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202102-divvy-tripdata.csv")
df3  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202201-divvy-tripdata.csv")
df4  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202202-divvy-tripdata.csv")
df5  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202203-divvy-tripdata.csv")
df6  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202204-divvy-tripdata.csv")
df7  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202205-divvy-tripdata.csv")
df8  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202206-divvy-tripdata.csv")
df9  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202207-divvy-tripdata.csv")
df10  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202208-divvy-tripdata.csv")
df11  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202209-divvy-tripdata.csv")
df12  <- read_csv("C:\\Users\\jaytraveling\\Desktop\\Data Analyst Project\\202210-divvy-tripdata.csv")

# Combine all 12 data file into one data set
bike_rides <- rbind(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,df11,df12)

# produce an overview of the data
str(bike_rides)

skim_without_charts(bike_rides)

glimpse(bike_rides)


```

#### Cleaning Data:

The following steps are used to cleaning data before analysis.

```{r eval=FALSE, include=TRUE}

# make all column names text with proper formatting
clean_names(bike_rides)


# check if columns with dates are formatted as dates
sapply(bike_rides, is.po) 


# results shows that all columns formatted as dates are true 

```


To aide in future analysis we will add extra columns to the data frame. The following codes was created with the help of Isabel Peels project as [referance](https://isabellapeel.github.io/Cyclistic_Case_Study-Divvy_Bikes/Analysis_w_code.html#statistic-summary) 

```{r eval=FALSE, include=TRUE}
# Create column data for year, month , day , week ,  y/m/d , & h:m:s  . 
bike_rides$year <- format(
  bike_rides$started_at, 
  "%Y"
)

# Month 
bike_rides$month <- format(
  bike_rides$started_at, 
  "%m"
)


  # Week 
bike_rides$week <- format(
  bike_rides$started_at,
  "%W"
)

# Day
bike_rides$day <- format(
  bike_rides$started_at, 
  "%d"
)

# Day of week 
bike_rides$day_of_week <- format(
  bike_rides$started_at, 
  "%A"
)

# Date, YYYY-MM-DD
bike_rides$YMD <- format(
  bike_rides$started_at, 
  "%Y-%m-%d"
)

# Time of Day, HH:MM:SS
bike_rides$ToD <- format(
  bike_rides$started_at, 
  "%H:%M:%S"
)

```
check to make sure all numbers are formatted correctly.

```{r eval=FALSE, include=TRUE}
# the following checks all columns if numeric:
sapply(bike_rides ,is.numeric)

# Order by date 
bike_rides <- bike_rides %>%
  arrange(started_at)
```

Next we find the ride length and create a separate column in the data frame.Delete any rows with ride_length less then zero because anything else does not make sense. 
```{r eval=FALSE, include=TRUE}

bike_rides$ride_length <- difftime(
  bike_rides$ended_at, 
  bike_rides$started_at,
  units = "secs"
) 


glimpse(bike_rides)
# By checking the data with glimpse, it looks like the ride length is time base, change to numeric for ease of anaylysis
#ride length is less then zero, which is cause for deletion
bike_rides$ride_length <- as.numeric(
  as.character(bike_rides$ride_length))

# to keep original data, we create a new cleaned data set named "bike_rides_cleaned".
bike_rides_cleaned <- bike_rides %>%
  filter(!(ride_length < 0))

check1 <- bike_rides_cleaned %>%
  arrange(ride_length)
```



To further clean data, delete any rows with NA 
```{r eval=FALSE, include=TRUE}

bike_rides_cleaned <- na.omit(bike_rides_cleaned)
```

There are some station names which are capitalized. Identify the station and delete that particular bike ride data since it represents test data. 
```{r eval=FALSE, include=TRUE}

capitalized_station_name_check <- bike_rides_cleaned %>%
  
  filter(
    str_detect(start_station_name, "[:upper:]")
    & !str_detect(start_station_name,"[:lower:]")
  ) %>%
  
  group_by(
    start_station_name
  ) %>%
  
  count(
    start_station_name
  )

# Remove capitalized station name
bike_rides_cleaned <- bike_rides_cleaned %>%
  filter(
    !(str_detect(start_station_name, "[:upper:]")
      & !str_detect(start_station_name, "[:lower:]"))
  )

```

# 5. Analyses

The next step is finding a relationship between member type, ride length, and frequency of use throughout the year. We create a bar graph to show this relationship.


Bar graph for Annual Members
```{r eval=FALSE, include=TRUE}
# Member bike ride length and riding frequency throughout the year

#create data frame for members using classic bikes
bar1a <- bike_rides_cleaned %>%
  select(month,year, member_casual,ride_length_hrs,rideable_type) %>%
  filter(member_casual=="member") %>%
  filter(rideable_type == "classic_bike") %>%
  group_by(month,year)%>%
  summarise(Classic_bike=sum(ride_length_hrs),.groups = 'drop') 

bar1a<- bar1a %>%
  rename(classic_bike=Classic_bike)

#create data frame for members using docked bikes
bar2a<- bike_rides_cleaned %>%
  select(month, year,  member_casual,ride_length_hrs,rideable_type) %>%
  filter(member_casual=="member") %>%
  filter(rideable_type == "docked_bike") %>%
  group_by(month,year)%>%
  summarise(dock_bike=sum(ride_length_hrs),.groups = 'drop')

#create data frame for members using electric bikes

bar3a <- bike_rides_cleaned %>%
  select(month, year, member_casual,ride_length_hrs,rideable_type) %>%
  filter(member_casual=="member") %>%
  filter(rideable_type == "electric_bike") %>%
  group_by(month,year)%>%
  summarise(electric_bike=sum(ride_length_hrs),.groups = 'drop')

# Join all data frames together. There are only 2 data frames since members do not use docked bikes
barjoined2<- left_join(bar1a, bar3a, by=c("month"="month","year"="year"))

#for plotting purpose, change year column to numeric
barjoined2$year <-as.numeric(barjoined2$year)

# To produce a correct bar graph transform data frame wide to long
barj2<-pivot_longer(barjoined2, 3:4)

# plot the data frame
bar_final2<-barj2 %>%
  #pivot_longer(cols = -month) %>%
  ggplot(aes(x = month, y = value)) +
  geom_bar(stat = "identity", 
           position = "dodge",
           aes(fill=name))+
  labs(title = " Members Bike Type Used ", y="Total Bike Ride Length (hr)")+
  coord_cartesian(ylim = c(0, 75000))+
  guides(fill=guide_legend("Bike Type"))+
  facet_wrap(~year)

```



Combine both the member and casual bar graphs into one.

```{r eval=FALSE, include=TRUE}

annual_casual_comp <- ggarrange(    #code to combine both graph
  bar_final1,        #first graph
  bar_final2,      #2nd graph
  ncol = 1, 
  nrow = 2,
  common.legend = FALSE
  #legend = "right"
  )
```

<!-- Rplot- Bike ride lengh bar graph -->
<img src="https://i.imgur.com/Q9sZxoF.png" width="800px">



Finding the most popular day of the week to ride in the last 12 months.

```{r eval=FALSE, include=TRUE}


week_day1 <- bike_rides_cleaned %>%
  
  select(
    day_of_week
  ) %>%
  group_by(day_of_week) %>%
  mutate(
    numtrips=n()
  ) %>%
  distinct(
    day_of_week, 
    .keep_all = TRUE
  ) %>%
  arrange(
    day_of_week
  )

# Adding x- axis labels 
week_day1$day_of_week<- ordered(
  week_day1$day_of_week, 
  levels = c(
    "Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"
  )
)

#Plotting the bar graph
Weekbar<- week_day1 %>%
  ggplot(aes(x = day_of_week, y = numtrips)) +
  geom_bar(stat = "identity", 
           position = "dodge",
           aes(fill=numtrips))+
  labs(title = " Day of Week most Popular ", y="Total Bike Rides per day", x= "")


# Members:
member_weekday1a <- bike_rides_cleaned%>%
  filter(member_casual=="member") %>%
  select(
  day_of_week
) %>%
  group_by(day_of_week) %>%
  mutate(
    numtrips=n()
  ) %>%
  distinct(
    day_of_week, 
    .keep_all = TRUE
  ) %>%
  arrange(
    day_of_week
  )

# Adding x- axis labels 
member_weekday1a$day_of_week<- ordered(
  member_weekday1a$day_of_week, 
  levels = c(
    "Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"
  )
)

Weekbar1<- member_weekday1a %>%
  ggplot(aes(x = day_of_week, y = numtrips)) +
  geom_bar(stat = "identity", 
           position = "dodge",
           aes(fill=numtrips))+
  labs(title = " Member's most Popular Day for Riding ", y="Total Bike Rides per day", x= "")


# Casual:
member_weekday1b <- bike_rides_cleaned%>%
  filter(member_casual=="casual") %>%
  select(
    day_of_week
  ) %>%
  group_by(day_of_week) %>%
  mutate(
    numtrips=n()
  ) %>%
  distinct(
    day_of_week, 
    .keep_all = TRUE
  ) %>%
  arrange(
    day_of_week
  )

# Adding x- axis labels 
member_weekday1b$day_of_week<- ordered(
  member_weekday1b$day_of_week, 
  levels = c(
    "Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"
  )
)

Weekbar2<- member_weekday1b %>%
  ggplot(aes(x = day_of_week, y = numtrips)) +
  geom_bar(stat = "identity", 
           position = "dodge",
           aes(fill=numtrips))+
  labs(title = " Casual's most Popular Day for Riding ", y="Total Bike Rides per day", x= "")

# combine


Weekday2 <- ggarrange(    #code to combine both graph
  Weekbar1,        #first graph
  Weekbar2,      #2nd graph
  ncol = 1, 
  nrow = 2,
  common.legend = FALSE
  #legend = "right"
)
  
```
Total bike rides for each day of the week throughout the year.

<!-- Rplot day of week bike rides-->
<img src="https://i.imgur.com/dwCYmy3.png" width="800px">





Most popular time of day  to  bike ride throughout the last 12 months

```{r eval=FALSE, include=TRUE}
# Popular time for Annual members to use bike share:

# Create data frame that summarises the number of trips by date 
heat_map_data1 <- bike_rides_cleaned %>%
  
  select(
    YMD, 
    started_at,
    week,
    year,
    member_casual
  ) %>%
  filter(member_casual=="member")

#create a column for hour
heat_map_data1$hour <- format(
  heat_map_data1$started_at, 
  "%H"
)

#create a column for week
heat_map_data1$week <-
  as.numeric(heat_map_data1$week)


heat_map_data1 <-heat_map_data1 %>%
  group_by(
    YMD,hour
  ) %>%
  
  mutate(
    numtrips = n()
  ) %>%
  
  distinct(
    YMD, 
    .keep_all = TRUE
  )



# Arrange hours in order for y-axis
heat_map_data1$hour<- ordered(
  heat_map_data1$hour, 
  levels = c(
    "00","01", "02", "03", "04",
    "05", "06", "07","08","09","10","11","12","13","14","15","16",
    "17","18","19","20","21","22","23", "24"
  )
)

# Create a heat map to show most popular time of year 
hhp3 <- ggplot(
  heat_map_data1,
  aes(
    x = week, 
    y = hour, 
    fill = numtrips
  )
) + 
  
  # Use the viridis colour scheme to show the popularity of each day
  scale_fill_viridis(
    option = "D",
    direction = 1,
    name = "Number of Trips"
  ) +
  
  # Create a rectangular heat map
  geom_tile(
    colour = "white", 
    na.rm = FALSE
  ) + 
  
  # Separate the heat maps by year
  facet_wrap(
    "year", 
    ncol = 1
  ) + 
  
  # Reverse the y-axis so that the hourdays read vertically Monday to Sunday 
  scale_y_discrete(
    limits = rev
  ) +
  
  # Add x-axis labels to show the months of the year
  scale_x_continuous(
    expand = c(0, 0),
    breaks = seq(1, 52, length = 12),
    labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
               "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
  ) +
  
  # Set the light theme 
  theme_light() +
  
# Add a title 
labs(title = "Member Riders" , y= "Hour of the Day" ,x="Months") 
```

<!-- Rplot_time of day member -->
<img src="https://i.imgur.com/jt25vEs.png" width="800px">


Popular time for casual members to use bike share:
```{r eval=FALSE, include=TRUE}

# Create data frame that summaries the number of trips by date 
heat_map_data2 <- bike_rides_cleaned %>%
  
  select(
    YMD, 
    started_at,
    week,
    year,
    member_casual
  ) %>%
  filter(member_casual=="casual")

#create a column for hour
heat_map_data2$hour <- format(
  heat_map_data2$started_at, 
  "%H"
)

#create a column for week
heat_map_data2$week <-
  as.numeric(heat_map_data2$week)


# Organize the heat map and count for each bike ride
heat_map_data2 <-heat_map_data2 %>%
  group_by(
    YMD, hour
  ) %>%
  
  mutate(
    numtrips = n()
  ) %>%
  
  distinct(
    YMD, 
    .keep_all = TRUE
  )



# Arrange hours in order for y-axis
heat_map_data2$hour<- ordered(
  heat_map_data2$hour, 
  levels = c(
    "00","01", "02", "03", "04",
    "05", "06", "07","08","09","10","11","12","13","14","15","16",
    "17","18","19","20","21","22","23", "24"
  )
)

# Create a heat map to show most popular time of year 
hhp4 <- ggplot(
  heat_map_data2,
  aes(
    x = week, 
    y = hour, 
    fill = numtrips
  )
) + 
  
  # Use the viridis colour scheme to show the popularity of each day
  scale_fill_viridis(
    option = "D",
    direction = 1,
    name = "Number of Trips"
  ) +
  
  # Create a rectangular heat map
  geom_tile(
    colour = "white", 
    na.rm = FALSE
  ) + 
  
  # Separate the heat maps by year
  facet_wrap(
    "year", 
    ncol = 1
  ) + 
  
  # Reverse the y-axis so that the hourdays read vertically Monday to Sunday 
  scale_y_discrete(
    limits = rev
  ) +
  
  # Add x-axis labels to show the months of the year
  scale_x_continuous(
    expand = c(0, 0),
    breaks = seq(1, 52, length = 12),
    labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
               "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
  ) +
  
  # Set the light theme 
  theme_light() +
  
  # Add a title 
  labs(title = "Casual Riders" , y= "Hour of the Day" ,x="Months") 
  
```


<!--Rplot Time of Day casual   -->
<img src="https://i.imgur.com/XBPgOqm.png" width="800px">

Combine Casual and Annual Member heat map

```{r eval=FALSE, include=TRUE}
hhp2a <- ggarrange(
  hhp3, 
  hhp4, 
  ncol = 1, 
  nrow = 2,
  common.legend = TRUE, 
  legend = "right"
)
```

<!-- Rplot_Time to Ride-->
<img src="https://i.imgur.com/T0fD7KK.png" width= "1000px ">


Popular area where  bike share are frequently used?
```{r eval=FALSE, include=TRUE}

# Create a data frame which groups number of trips by station name and includes latitude and longitude coordinates for each station
map_data_mem <- bike_rides_cleaned %>%
  
  select(
    start_station_name, 
    start_lat, 
    start_lng,
    member_casual
  ) %>%
  filter(member_casual== "casual") %>%
  
  group_by(
    start_station_name
  ) %>%
  
  mutate(
    numtrips = n()
  ) %>%
  
  distinct(
    start_station_name,  
    .keep_all = TRUE
  )

#data frame member:
map_data_mem2 <- bike_rides_cleaned %>%
  
  select(
    start_station_name, 
    start_lat, 
    start_lng,
    member_casual
  ) %>%
  filter(member_casual== "member") %>%
  
  group_by(
    start_station_name
  ) %>%
  
  mutate(
    numtrips = n()
  ) %>%
  
  distinct(
    start_station_name,  
    .keep_all = TRUE
  )
#arrange by number of trips  in descending order
map_data_mem <- map_data_mem %>%
  arrange(desc(numtrips))

map_data_mem2 <- map_data_mem2 %>%
  arrange(desc(numtrips))

#merge map data together
map_data2 <- rbind(map_data_mem,map_data_mem2)

#Legend labels 
groups_all2<- c( "member", "casual")  # this is the text that will be in the legend

# Create a sequence of values which will act as the key shown on the leaflet map to group stations which have a similar number of trips occurring together
mybins2 <- seq(0, 70000, by = 5000)


## viridis colour palette to visually show how popular a station is 
mypalette2 <- colorBin(
  palette ="viridis",
  domain = map_data2$numtrips,
  na.color = "transparent", 
  bins = mybins2
)


# Prepare text to be used in a tooltip so that users can interact with the coloured markers on the map
mytext2 <- paste(
  "Station name: ", map_data2$start_station_name, "<br/>",
  "Number of trips: ", map_data2$numtrips, sep = "" 
) %>%
  lapply(htmltools::HTML)

#plot the data
foo <-leaflet(map_data2) %>% 
  addTiles() %>%  
  
  # Set coordinates over the city of Chicago
  setView(
    lng = -87.6298, lat = 41.8781, zoom = 11.5 
  ) %>%
  addProviderTiles("Esri.WorldGrayCanvas") %>%
  addCircleMarkers(
    lng = ~start_lng,
    lat = ~start_lat,
    label = mytext2,
    fillColor = ~ mypalette2(numtrips), 
    fillOpacity = 0.7, 
    color = "white", 
    radius = 5,
    stroke= FALSE,
    group = ~paste(member_casual),
    labelOptions = labelOptions(
      style = list( 
        "font-weight" = "normal", 
        padding = "3px 8px"
      ), 
      textsize = "13px", 
      direction = "auto"
    ) 
    
  )%>% 
  #this is the layer where user can control the categorizes that can be toggled on or off
  addLayersControl(
    overlayGroups = groups_all2,
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  
  # Add a legend 
  addLegend( 
    pal = mypalette2, 
    values = ~ numtrips, 
    opacity = 0.9,
    title = "Number of trips", 
    position = "bottomright"
  )%>%
  hideGroup("casual")
```

Popular location for Memeber bike rides:

<!-- Rplot_Time to Ride-->
<img src="https://i.imgur.com/zIxjsYk.png" width= "1000px">


Popular location for Casual bike Rides:

<!-- Popular bike stations for Casual member-->

<img src="https://i.imgur.com/vXMrhL1.png" width= "1000px">


The Top 100 bike stations for both casual and member riders

```{r eval=FALSE, include=TRUE}
# Create a data frame which groups number of trips by station name and includes latitude and longitude coordinates for each station
map_data <- bike_rides_cleaned %>%
  
  select(
    start_station_name, 
    start_lat, 
    start_lng
  ) %>%
  
  group_by(
    start_station_name
  ) %>%
  
  # counts how many a bike share  is used in a group 
  mutate(
    numtrips = n()
  ) %>%
  
  distinct(
    start_station_name,  
    .keep_all = TRUE
  )



# Create a sequence of values which will act as the key shown on the leaflet map to group stations which have a similar number of trips occurring together
mybins <- seq(0, 70000, by = 10000)

# Assign the viridis colour palette to visually show how popular a station is 
mypalette <- colorBin(
  palette ="viridis",
  domain = map_data$numtrips,
  na.color = "transparent", 
  bins = mybins
)

# Prepare text to be used in a tooltip so that users can interact with the coloured markers on the map
mytext <- paste(
  "Station name: ", map_data$start_station_name, "<br/>",
  "Number of trips: ", map_data$numtrips, sep = "" 
) %>%
  lapply(htmltools::HTML)

# top 100 stations used in a year:
map_data_100 <- map_data %>%
  arrange((desc(numtrips)))

#Show only top 100 of data
  map_data_100<- head(map_data_100,100)
  
  
#Plotting the top 100 bike stations
p2<- leaflet(map_data_100) %>% 
  addTiles() %>%  
  
  # Set coordinates over the city of Chicago
  setView(
    lng = -87.6298, lat = 41.8781, zoom = 11.5 
  ) %>% 
  
  # Set map style 
  addProviderTiles("Esri.WorldGrayCanvas") %>%
  
  # Add circle markers to represent each station 
  # & add a fill colour to show the popularity of each station 
  # & add an interactive tooltip for detail
  addCircleMarkers(
    ~ start_lng, ~ start_lat, 
    fillColor = ~ mypalette(numtrips), 
    fillOpacity = 0.7, 
    color = "white", 
    radius = 8, 
    stroke = FALSE,
    label = mytext,
    labelOptions = labelOptions(
      style = list( 
        "font-weight" = "normal", 
        padding = "3px 8px"
      ), 
      textsize = "13px", 
      direction = "auto"
    ) 
  ) %>%
  
  # Add a legend 
  addLegend( 
    pal = mypalette, 
    values = ~ numtrips, 
    opacity = 0.9,
    title = "Number of trips", 
    position = "bottomright"
  )

```
Top 100 bike stationns

<!--  Top 100 Popular bike stations -->
<img src= "https://drive.google.com/uc?id=1GK_yDPXD98iiypdIomMevoCY-wiSSa74" width= "1000px ">



The Top 10 bike stations for both casual and member riders

```{r eval=FALSE, include=TRUE}
map_data_10<- head(map_data_100,10)
# top 100 stations used in a year:
map_data_100 <- map_data %>%
  arrange((desc(numtrips)))

map_data_100<- head(map_data_100,100)

p3<- leaflet(map_data_10) %>% 
  addTiles() %>%  
  
  # Set coordinates over the city of Chicago
  setView(
    lng = -87.6298, lat = 41.8781, zoom = 11.5 
  ) %>% 
  
  # Set map style 
  addProviderTiles("Esri.WorldGrayCanvas") %>%
  
  # Add circle markers to represent each station 
  # & add a fill colour to show the popularity of each station 
  # & add an interactive tooltip for detail
  addCircleMarkers(
    ~ start_lng, ~ start_lat, 
    fillColor = ~ mypalette(numtrips), 
    fillOpacity = 0.7, 
    color = "white", 
    radius = 8, 
    stroke = FALSE,
    label = mytext,
    labelOptions = labelOptions(
      style = list( 
        "font-weight" = "normal", 
        padding = "3px 8px"
      ), 
      textsize = "13px", 
      direction = "auto"
    ) 
  ) %>%
  
  # Add a legend 
  addLegend( 
    pal = mypalette, 
    values = ~ numtrips, 
    opacity = 0.9,
    title = "Number of trips", 
    position = "bottomright"
  )

```

Top 10 bike stations
<!-- Top 10 Popular bike stations -->
<img src="https://drive.google.com/uc?id=1IlLd6mHCAa7lZUCtOxagXU4-YFEaFbkE" width="1000px">



Statistical Summery
```{r eval=FALSE, include=TRUE}
summery1 <- bike_rides_cleaned %>%
  group_by(member_casual) %>%
  summarise(
    total_trips=n(),
    ave_ride_length_mins = (mean(ride_length, na.rm = TRUE))/60,
    Total_bike_ride_length_hr=sum(ride_length)/3600,
    electric_bike_ride_length_hr=sum(ride_length[rideable_type=="electric_bike"])/3600,
    dock_bike_ride_length_hr=sum(ride_length[rideable_type=="docked_bike"])/3600, 
    classic_bike_ride_length_hr=sum(ride_length[rideable_type=="classic_bike"])/3600, 
  )

```

<!-- SUMMERY  -->
<img src="https://i.imgur.com/wv1BRf1.png" width="800px">




# 6 Conclusion: Share Data Findings and Recommendations

Members totaled 2,465,636 rides compared to casual members with 1,652,826 total rides in the last 12 months.In contrast the casual member, used Cyclistic bike service longer than annual members.

Cyclistic bike use is popular during the summer months and decrease during fall and winter months for both casual and annual members. 

<!-- Rplot_Time to Ride -->
<img src="https://drive.google.com/uc?id=1plIqAskw13rFLr1W0UXlJRwTrOXpEU6P" width= "1000px ">


Casual members use Cyclistic bikes predominantly during the summer months peaking during the last week of May from 11:00:00 to 16:00:00. Compared to casual members, annual members has a relatively steady amount of rider usage throughout the summer months during May through August.Annual members tend to be most active during the beginning of the week peaking on Wednesday at totaling at 388,275 trips. Inversely casual riders are most active during Saturday at 350,037 rides.

<!--Rplot day of week bike rides  -->
<img src="https://i.imgur.com/dwCYmy3.png" width= "800px">



Annual members use Cyclistic bike more  than casual members. Inversely casual member ride length is higher then annual members. This may be ue to causal member using Cyclistic bike for leisurely activity for longer period of time compared to members using the service for short commutes or running errands. Ride length is longer for  the classic bike followed by electric and docked bikes with casual member . Annual members do not use dock bikes at all and prefer classic bike or electric bikes.

<!-- Rplot- Bike ride lengh bar graph -->
<img src="https://drive.google.com/uc?id=1BhvnS2ooxcQa83yErW4DK_NklOd5ydXv" width= "1000px">


•	Cyclistic bike use is very popular for casual and annual members around the “Loop” area of the city of Chicago, a prime business  and tourist location. 

<!--Overal Popular bike stations -->
<img src="https://drive.google.com/uc?id=1ti2RCp_EBCStaD2vphjxlKSzY5ZaZmlL" width="1000px">



•	Top 100 bike stations
<!--Top 100 Popular bike stations   -->
<img src= "https://i.imgur.com/qqqqivG.png" width= "1000px ">

•	Top 10 stations are:
<!-- Top 10 Popular bike stations -->
<img src="https://i.imgur.com/KOTmiko.png" width="800px">


<!--  List of top 10 bike stations -->
<img src= "https://i.imgur.com/sA8u9ZO.png" width= "1000px">



Casual riders out number annual members around the area due to the  high  tourist attraction and parks,  reflecting bike use for leisurely activity. In contrast, Annual members bike rides reflect the act  of commuting for work or business activity.
2nd popular area  for Cyclistic bike use is north of the Loop around Wrigley Field. 



#### 6.1 How could your team and business apply your insights?
•	Any promotions should be done on Saturday during peak hours of 1200 to 1600 hr.  Specifically  summer months late May  through August to maximize  the promotional message to casual bike share riders. 



#### 6.2 What next steps would you or your stakeholders take based on your ﬁndings?
Promotional campaign focused on casual riders. Communicate to casual riders that there could be incentives to becoming  from annual member. 
* 1 month free or discounted price for 12 months subscription
* Communicate to casual member who reach a ride length thrush hold that it may be beneficial economically to convert to annual

Limitations of the analysis-
Cost to use Cyclistic bike share is not included in the data set. Or the total amount of money spent per month to use Cyclistic ride length for each bike user. This could greatly increase the amount of possible promotional ideas to be presented that may be effective in converting causal members to annual members.


